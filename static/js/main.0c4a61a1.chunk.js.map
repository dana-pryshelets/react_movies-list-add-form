{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","clearForm","handleSubmit","preventDefault","props","onAdd","onSubmit","this","type","placeholder","onChange","required","Component","App","moviesFromServer","addMovie","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c4a61a1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onAdd(this.state);\n    this.clearForm();\n  }\n\n  render() {\n    return (\n      <>\n        <p className=\"mb-4\">Add new movie</p>\n        <form\n          onSubmit={this.handleSubmit}\n          className=\"d-flex flex-column gap-2\"\n        >\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"ImgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"ImdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"ImdbId\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn-dark\"\n          >\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    const newMovie = {\n      title: movie.title,\n      description: movie.description,\n      imgUrl: movie.imgUrl,\n      imdbUrl: movie.imdbUrl,\n      imdbId: movie.imdbId,\n    };\n\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}